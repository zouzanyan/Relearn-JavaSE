package 面向对象;

import 面向对象.entity.Animal;

/*
子类可以继承父类的方法，但如果子类对父类的方法不满意，想在里面加入适合自己的一些操作时，就需要将方法进行重写。并且子类在调用方法中，优先调用
子类的方法。当然在方法重写时要注意，重写的方法一定要与原父类的方法语法保持一致，比如返回值类型，参数类型及个数，和方法名都必须一致。
*/

public class Dog extends Animal {

    public static void main(String[] args) {
        Dog dog = new Dog();
        dog.say();
    }

    @Override
    public void say() {
        System.out.println("我是一条狗");
    }
}

// 重写快捷键 alt+insert

/*
方法重载是指在一个类中定义多个同名的方法，但要求每个方法具有不同的参数的类型或参数的个数。方法重载一般用于创建一组任务相似但是参数不同的方法。
- 方法中的参数列表必须不同。比如：参数个数不同或者参数类型不同。
- 重载的方法中允许抛出不同的异常
- 可以有不同的返回值类型，但是参数列表必须不同。
- 可以有不同的访问修饰符。
*/

/*如果定义了一个指向子类对象的父类引用类型，那么它除了能够引用父类中定义的所有属性和方法外，还可以使用子类强大的功能。但是对于只存在于子类的方法和属
性就不能获取。因此，向上转型，在运行时，会遗忘子类对象中与父类对象中不同的方法，也会覆盖与父类中相同的方法——重写（方法名，参数都相同）。
*/